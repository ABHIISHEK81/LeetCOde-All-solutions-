//  679. 24 Game  //



class Solution(object):
    def judgePoint24(self, cards):
        """
        :type cards: List[int]
        :rtype: bool
        """
        import itertools

        EPSILON = 1e-6
        TARGET = 24.0

        def dfs(nums):
            if len(nums) == 1:
                return abs(nums[0] - TARGET) < EPSILON

            for i in range(len(nums)):
                for j in range(len(nums)):
                    if i != j:
                      
                        next_nums = [nums[k] for k in range(len(nums)) if k != i and k != j]

                        for op in [
                            nums[i] + nums[j],
                            nums[i] - nums[j],
                            nums[j] - nums[i],
                            nums[i] * nums[j],
                        ]:
                            if dfs(next_nums + [op]):
                                return True
                        if abs(nums[j]) > EPSILON and dfs(next_nums + [nums[i] / nums[j]]):
                            return True
                        if abs(nums[i]) > EPSILON and dfs(next_nums + [nums[j] / nums[i]]):
                            return True
            return False

        return dfs([float(x) for x in cards])


